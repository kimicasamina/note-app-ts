/* CSS Reset */
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Smooth transition for hover, focus, and other interactive states */
* {
  transition: all 0.3s ease;
}

html,
body {
  font-family: var(--font-body);
  line-height: 1.5;
  background-color: var(--background-color);
  color: var(--text-color);
  transition: background-color 0.3s ease;
}

a {
  text-decoration: none;
  color: inherit;
}

ul,
ol {
  list-style: none;
}

input,
textarea {
  border: 1px solid #ccc;
  padding: 0.5rem;
  border-radius: 0.3rem;
}

/* TYPOGRAPHY  */
h1,
h2 {
  /* font-family: var(--font-headings); */
}

/* Global Button Styles */
.button {
  background-color: var(--primary-color);
  color: var(--text-light);
  font-size: var(--font-size-sm);
  padding: var(--spacing-unit) 2rem;
  border: none;
  border-radius: var(--border-radius);
  cursor: pointer;
  transition: all 0.3s ease; /* Smooth transition for hover and active states */
  display: flex;
  justify-content: center;
  align-items: center;
  min-width: 150px; /* To ensure consistency in button size */
  height: 45px; /* Set a consistent button height */
}

.button:hover {
  background-color: var(
    --secondary-color
  ); /* Change background color on hover */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Subtle shadow on hover */
}

.button:active {
  background-color: var(
    --primary-color
  ); /* Keep primary color on active press */
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); /* Slightly stronger shadow on active */
}

.button:disabled {
  background-color: var(--gray-light); /* Disabled button color */
  color: var(--bg-light); /* Light text when disabled */
  cursor: not-allowed; /* Change cursor to not-allowed when disabled */
  box-shadow: none; /* Remove shadow on disabled state */
}

.button .loading-text {
  font-weight: bold;
  color: var(--bg-light); /* Light text color for loading text */
}

/* Optional: If you'd like to style the button with an accent color or for success */
.button.success {
  background-color: var(--color-success);
}

.button.success:hover {
  background-color: var(--color-success);
  box-shadow: 0 4px 8px rgba(0, 255, 0, 0.2);
}

/* Loading state animation */
.button.is-loading {
  position: relative;
  pointer-events: none; /* Prevent clicks when loading */
}

.button.is-loading::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 25px;
  height: 25px;
  border: 3px solid var(--text-light);
  border-radius: 50%;
  border-top: 3px solid transparent;
  animation: spin 1s linear infinite; /* Create a spinning animation */
  transform: translate(-50%, -50%);
}

/* Loading spinner animation */
@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Styling for Link components that look like buttons */
.button-link {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  background-color: var(--primary-color);
  color: var(--text-light);
  padding: var(--spacing-unit) 2rem;
  font-size: var(--font-size-sm);
  border-radius: var(--border-radius);
  text-decoration: none; /* Remove underline from Link */
  cursor: pointer;
  transition: all 0.3s ease;
}

.button-link:hover {
  background-color: var(--secondary-color); /* Hover effect */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.button-link:active {
  background-color: var(--primary-color);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

/* Optionally, you can add a success class if needed */
.button-link.success {
  background-color: var(--color-success);
}

.button-link.success:hover {
  background-color: var(--color-success);
  box-shadow: 0 4px 8px rgba(0, 255, 0, 0.2);
}
